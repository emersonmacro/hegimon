{"version":3,"sources":["utils/Currency.ts","utils/Dates.ts","utils/Data.ts","components/AboutModal/AboutModal.tsx","components/Chart/Chart.tsx","components/AssetModule/AssetModule.tsx","components/DetailsModal/DetailsModal.tsx","components/Navbar/Navbar.tsx","components/StatsModal/StatsModal.tsx","App.tsx","index.tsx"],"names":["currencyFormatter","Intl","NumberFormat","style","currency","formatTimestamp","timestamp","dateObject","Date","getMonth","getDate","getFullYear","getQuery","skip","gql","getOptionsData","a","optionsData","skipCounter","i","request","data","options","length","getPriceData","fetch","json","processData","priceData","map","option","_periodInDays","period","now","Math","floor","_remainingDays","expiration","referencePrice","symbol","ethereum","usd","type","_moneyness","parseFloat","strike","computeStats","puts","filter","o","calls","pcRatioRaw","pcRatio","round","Number","EPSILON","itm","otm","notional","reduce","sum","current","amount","total","format","AboutModal","isOpen","toggleModal","Modal","fade","toggle","ModalHeader","className","ModalBody","href","target","rel","ModalFooter","Button","outline","size","color","onClick","COLORS","Chart","asset","setActiveId","currentPrice","mappedData","d","x","y","id","xDomain","min","max","yDomain","axisStyles","axis","stroke","tickLabels","fill","fontSize","axisLabel","padding","fontFamily","ticks","strokeWidth","strokeOpacity","domain","background","top","bottom","left","right","containerComponent","dependentAxis","label","labels","labelComponent","name","datum","fillOpacity","events","eventHandlers","mutation","props","onMouseOver","onMouseOut","AssetModule","stats","Alert","Row","Col","DetailsModal","accountUrl","account","blockUrl","block","toFixed","premium","settlementFee","totalFee","lockedAmount","impliedVolatility","status","Navbar","toggleStatsModal","toggleAboutModal","Nav","NavItem","NavLink","StatsModal","ethData","wbtcData","ethStats","wbtcStats","totalStats","Table","borderless","App","useState","setEthData","setWbtcData","activeId","setPriceData","detailsModalIsOpen","setDetailsModalIsOpen","modalOption","setModalOption","statsModalIsOpen","setStatsModalIsOpen","aboutModalIsOpen","setAboutModalIsOpen","isLoading","setIsLoading","hasError","setHasError","closeDetailsModal","useEffect","_priceData","processedData","console","log","loadData","Boolean","openDetailsModal","ethOption","find","findOption","Container","fluid","Spinner","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e334732.chunk.js","sourcesContent":["export const currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n})\n","export const formatTimestamp = (timestamp: number): string => {\n  const dateObject = new Date(timestamp * 1000)\n  return `${ dateObject.getMonth() + 1 }/${ dateObject.getDate() }/${ dateObject.getFullYear() }`\n}\n\nexport const currentTimestamp = (): number => Math.floor(Date.now() / 1000)\n","import { request, gql } from 'graphql-request'\n\nimport { IOption } from '../interfaces/IOption'\nimport { IPriceResponse } from '../interfaces/IPriceResponse'\nimport { IStats } from '../interfaces/IStats'\n\nimport { currencyFormatter } from '../utils/Currency'\nimport { currentTimestamp } from '../utils/Dates'\n\nconst COINGECKO_URL = 'https://api.coingecko.com/api/v3/simple/price?ids=ethereum,wrapped-bitcoin&vs_currencies=usd'\nconst GRAPHQL_URL = 'https://api.thegraph.com/subgraphs/name/ppunky/hegic-v888'\n\nconst getQuery = (skip = 0) => gql`\n  query GetOptions {\n    options(first: 100, skip: ${ skip }, where: { status: \"ACTIVE\" }) {\n      id\n      account\n      symbol\n      status\n      strike\n      amount\n      lockedAmount\n      timestamp\n      block\n      period\n      expiration\n      type\n      premium\n      settlementFee\n      totalFee\n      exercise_timestamp\n      exercise_tx\n      profit\n      impliedVolatility\n    }\n  }\n`\n\nexport const getOptionsData: () => Promise<IOption[]> = async () => {\n  let optionsData: IOption[] = []\n  let skipCounter = 0\n  for (let i = 0; i < 100; i++) {\n    const data = await request(GRAPHQL_URL, getQuery(skipCounter))\n    optionsData = [...optionsData, ...data.options]\n    if (data.options.length < 100) {\n      break\n    }\n    skipCounter = skipCounter + 100\n  }\n  return optionsData\n}\n\nexport const getPriceData: () => Promise<IPriceResponse> = async () => {\n  return (await fetch(COINGECKO_URL)).json()\n}\n\nexport const processData = (optionsData: IOption[], priceData: IPriceResponse | null): IOption[] => {\n  if (priceData === null) {\n    return []\n  }\n  return optionsData.map((option) => {\n    // process expiration\n    option._periodInDays = option.period! / 86400\n    const now = currentTimestamp()\n    option._remainingDays = (option.expiration - now) / 86400\n    // process moneyness\n    const referencePrice = option.symbol === 'ETH' ? priceData.ethereum.usd : priceData['wrapped-bitcoin'].usd\n    if (option.type === 'CALL') {\n      option._moneyness = referencePrice > parseFloat(option.strike!) ? 'ITM' : 'OTM'\n    } else {\n      option._moneyness = referencePrice < parseFloat(option.strike!) ? 'ITM' : 'OTM'\n    }\n    return option\n  })\n}\n\nexport const computeStats = (data: IOption[]): IStats => {\n  const puts = data.filter((o) => o.type === 'PUT')\n  const calls = data.filter((o) => o.type === 'CALL')\n  const pcRatioRaw = puts.length / calls.length\n  const pcRatio = Math.round((pcRatioRaw + Number.EPSILON) * 100) / 100\n  const itm = data.filter((o) => o._moneyness === 'ITM')\n  const otm = data.filter((o) => o._moneyness === 'OTM')\n  const notional = data.reduce((sum, current) => {\n    const amount = parseFloat(current.amount)\n    const strike = parseFloat(current.strike)\n    return (amount * strike) + sum\n  }, 0)\n  return {\n    total: data.length,\n    puts: puts.length,\n    calls: calls.length,\n    pcRatio,\n    itm: itm.length,\n    otm: otm.length,\n    notional: currencyFormatter.format(notional),\n  }\n}\n\nexport const findOption = (activeId: string, ethData: IOption[], wbtcData: IOption[]): IOption | undefined => {\n  const ethOption = ethData.find((o) => o.id === activeId)\n  if (Boolean(ethOption)) {\n    return ethOption\n  }\n  const wbtcOption = wbtcData.find((o) => o.id === activeId)\n  return wbtcOption\n}\n","import {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap'\n\nimport './AboutModal.css'\n\ninterface IAboutModalProps {\n  isOpen: boolean\n  toggleModal: any\n}\n\nconst AboutModal = ({ isOpen, toggleModal }: IAboutModalProps) => {\n\n  return (\n    <Modal\n      fade={ false }\n      isOpen={ isOpen }\n      toggle={ toggleModal }\n    >\n\n      <ModalHeader\n        className=\"modal-section\"\n      >\n        About Hegimon\n      </ModalHeader>\n\n      <ModalBody\n        className=\"modal-section\"\n      >\n\n        <p>\n          Hegimon is a data visualization tool for active option contracts on the Hegic v888 protocol.\n        </p>\n\n        <ul>\n          <li>Light dots represent call options</li>\n          <li>Dark dots represent put options</li>\n          <li>Click on a dot to see details for that contract</li>\n          <li>Notional = Strike * Amount</li>\n        </ul>\n\n        <br />\n\n        <p className=\"text-center\">\n          Powered by <a href=\"https://www.hegic.co\" target=\"_BLANK\" rel=\"noreferrer\">Hegic</a>, <a href=\"https://www.coingecko.com/en/api\" target=\"_BLANK\" rel=\"noreferrer\">CoinGecko</a>, and <a href=\"https://thegraph.com\" target=\"_BLANK\" rel=\"noreferrer\">Graph Protocol</a>\n        </p>\n\n        <p className=\"text-center\">\n          Made by <a href=\"https://twitter.com/EmersonMacro\" target=\"_BLANK\" rel=\"noreferrer\">@EmersonMacro</a>\n        </p>\n\n        <p className=\"text-center\">\n          <a href=\"https://github.com/emersonmacro/hegimon\" target=\"_BLANK\" rel=\"noreferrer\">Source on Github</a>\n        </p>\n\n      </ModalBody>\n\n      <ModalFooter\n        className=\"modal-section\"\n      >\n        <Button\n          outline\n          size=\"sm\"\n          color=\"secondary\"\n          onClick={ () => toggleModal() }\n        >\n          Close\n        </Button>\n      </ModalFooter>\n\n    </Modal>\n  )\n\n}\n\nexport default AboutModal\n","import {\n  VictoryChart,\n  VictoryScatter,\n  VictoryAxis,\n  VictoryLine,\n  VictoryVoronoiContainer,\n  VictoryTooltip,\n} from 'victory'\n\nimport { IOption } from '../../interfaces/IOption'\n\nimport { currencyFormatter } from '../../utils/Currency'\n\nconst COLORS = {\n  axis: '#7C858F',\n  background: '#263136',\n  ethCallFill: '#509BC2',\n  ethPutFill: '#3C738F',\n  wbtcCallFill: '#7EBF8D',\n  wbtcPutFill: '#5E8D69',\n  dataStroke: '#BAD9E9',\n  ethPriceLine: '#007bff',\n  wbtcPriceLine: '#28a745',\n}\n\ninterface IChartProps {\n  asset: string\n  data: IOption[]\n  setActiveId: Function\n  currentPrice: number | undefined\n}\n\nconst Chart = ({ asset, data, setActiveId, currentPrice }: IChartProps) => {\n\n  if (data.length === 0) {\n    return <div>No results found</div>\n  }\n\n  const mappedData = data.map((d) => {\n    return {\n      x: parseFloat(d.strike),\n      y: parseFloat(d.amount),\n      id: d.id,\n      type: d.type,\n    }\n  })\n\n  const xDomain = [Math.min(...data.map(d => parseFloat(d.strike))), Math.max(...data.map(d => parseFloat(d.strike)))] as [number, number]\n  const yDomain = [Math.min(...data.map(d => parseFloat(d.amount))), Math.max(...data.map(d => parseFloat(d.amount)))] as [number, number]\n\n  const axisStyles = {\n    axis: {stroke: COLORS.axis},\n    tickLabels: {fill: COLORS.axis, fontSize: 10},\n    axisLabel: {fill: COLORS.axis, fontSize: 12, padding: 30, fontFamily: 'Courier'},\n    ticks: {stroke: COLORS.axis, strokeWidth: 4, strokeOpacity: 0.6},\n  }\n\n  return (\n    <VictoryChart\n      domain={{ x: xDomain, y: yDomain }}\n      style={{\n        background: { fill: COLORS.background },\n      }}\n      padding={{\n        top: 5,\n        bottom: 50,\n        left: 40,\n        right: 40,\n      }}\n      containerComponent={ <VictoryVoronoiContainer/> }\n    >\n      <VictoryAxis\n        dependentAxis\n        label=\"Size\"\n        style={ axisStyles }\n      />\n      <VictoryAxis\n        label=\"Strike\"\n        style={ axisStyles }\n      />\n      <VictoryLine\n        style={{\n          data: {\n            stroke: asset === 'ETH' ? COLORS.ethPriceLine : COLORS.wbtcPriceLine,\n            strokeWidth: 0.5,\n          }\n        }}\n        x={ () => currentPrice }\n        labels={() => `Current Price: ${ currentPrice ? currencyFormatter.format(currentPrice) : '' }`}\n        labelComponent={\n          <VictoryTooltip\n            style={{ fontSize: 10 }}\n          />\n        }\n      />\n      <VictoryScatter\n        name=\"active-options\"\n        style={{\n          data: {\n            fill: ({datum}) => {\n              if (asset === 'ETH') {\n                return datum.type === 'CALL' ? COLORS.ethCallFill : COLORS.ethPutFill\n              } else {\n                return datum.type === 'CALL' ? COLORS.wbtcCallFill : COLORS.wbtcPutFill\n              }\n            },\n            stroke: COLORS.dataStroke,\n            strokeWidth: 0.5,\n            fillOpacity: 0.85,\n          }\n        }}\n        size={ 3 }\n        data={ mappedData }\n        events={[\n          {\n            target: 'data',\n            eventHandlers: {\n              onClick: () => {\n                return [\n                  {\n                    target: 'data',\n                    mutation: (props) => {\n                      setActiveId(props.datum.id)\n                    }\n                  }\n                ]\n              },\n              onMouseOver: () => {\n                return [\n                  {\n                    target: 'data',\n                    mutation: (props) => {\n                      return {\n                        style: {\n                          fill: ({datum}: any) => {\n                            if (asset === 'ETH') {\n                              return datum.type === 'CALL' ? COLORS.ethCallFill : COLORS.ethPutFill\n                            } else {\n                              return datum.type === 'CALL' ? COLORS.wbtcCallFill : COLORS.wbtcPutFill\n                            }\n                          },\n                          stroke: 'white',\n                          strokeWidth: 0.8,\n                          fillOpacity: 0.65,\n                        }\n                      }\n                    }\n                  }\n                ]\n              },\n              onMouseOut: () => {\n                return [\n                  {\n                    target: 'data',\n                    mutation: (props) => {\n                      return {\n                        style: {\n                          fill: ({datum}: any) => {\n                            if (asset === 'ETH') {\n                              return datum.type === 'CALL' ? COLORS.ethCallFill : COLORS.ethPutFill\n                            } else {\n                              return datum.type === 'CALL' ? COLORS.wbtcCallFill : COLORS.wbtcPutFill\n                            }\n                          },\n                          stroke: COLORS.dataStroke,\n                          strokeWidth: 0.5,\n                          fillOpacity: 0.85,\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]}\n      />\n    </VictoryChart>\n  )\n\n}\n\nexport default Chart\n","import { Alert, Col, Row } from 'reactstrap'\n\nimport './AssetModule.css'\n\nimport { IOption } from '../../interfaces/IOption'\nimport { IStats } from '../../interfaces/IStats'\n\nimport { computeStats } from '../../utils/Data'\n\nimport Chart from '../Chart/Chart'\n\ninterface IAssetModuleProps {\n  asset: string\n  data: IOption[]\n  setActiveId: Function\n  currentPrice: number | undefined\n}\n\nconst AssetModule = ({ asset, data, setActiveId, currentPrice }: IAssetModuleProps) => {\n  \n  const stats: IStats = computeStats(data)\n  \n  return (\n    <>\n\n      <div className=\"chart-container\">\n        <Chart\n          asset={ asset }\n          data={ data }\n          setActiveId={ setActiveId }\n          currentPrice={ currentPrice }\n        />\n      </div>\n\n      <Alert\n        color={ asset === 'ETH' ? 'primary' : 'success' }\n        className=\"asset-alert\"\n      >\n        <h5 className=\"text-center asset-header\">\n          { asset }\n        </h5>\n      </Alert>\n\n      <Row className=\"stat-row\">\n        <Col>Active Contracts</Col>\n        <Col className=\"text-right\"><b>{ stats.total }</b></Col>\n      </Row>\n\n      <Row className=\"stat-row\">\n        <Col>Puts</Col>\n        <Col className=\"text-right\"><b>{ stats.puts }</b></Col>\n      </Row>\n\n      <Row className=\"stat-row\">\n        <Col>Calls</Col>\n        <Col className=\"text-right\"><b>{ stats.calls }</b></Col>\n      </Row>\n\n      <Row className=\"stat-row\">\n        <Col>Put/Call Ratio</Col>\n        <Col className=\"text-right\"><b>{ stats.pcRatio }</b></Col>\n      </Row>\n\n      <Row className=\"stat-row\">\n        <Col>ITM / OTM</Col>\n        <Col className=\"text-right\"><b>{ stats.itm } / { stats.otm }</b></Col>\n      </Row>\n\n      <Row className=\"stat-row\">\n        <Col>Total Notional</Col>\n        <Col className=\"text-right\"><b>{ stats.notional }</b></Col>\n      </Row>\n\n    </>\n  )\n}\n\nexport default AssetModule\n","import {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Row,\n  Col,\n} from 'reactstrap'\n\nimport './DetailsModal.css'\n\nimport { IOption } from '../../interfaces/IOption'\n\nimport { currencyFormatter } from '../../utils/Currency'\nimport { formatTimestamp } from '../../utils/Dates'\n\ninterface IDetailsModalProps {\n  option: IOption | null | undefined\n  isOpen: boolean\n  toggleModal: any\n}\n\nconst DetailsModal = ({ option, isOpen, toggleModal }: IDetailsModalProps) => {\n\n  if (!option) {\n    return null\n  }\n\n  const notional = parseFloat(option.amount) * parseFloat(option.strike)\n  const accountUrl = `https://etherscan.io/address/${ option.account }`\n  const blockUrl = `https://etherscan.io/block/${ option.block }`\n\n  return (\n    <Modal\n      fade={ false }\n      isOpen={ isOpen }\n      toggle={ toggleModal }\n    >\n\n      <ModalHeader\n        className=\"modal-section\"\n      >\n        { option.id }\n      </ModalHeader>\n\n      <ModalBody\n        className=\"modal-section\"\n      >\n\n        <Row>\n          <Col>ID</Col>\n          <Col className=\"text-right\"><b>{ option.id }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Underlying</Col>\n          <Col className=\"text-right\"><b>{ option.symbol }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Type</Col>\n          <Col className=\"text-right\"><b>{ option.type }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Amount</Col>\n          <Col className=\"text-right\"><b>{ option.amount }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Strike</Col>\n          <Col className=\"text-right\"><b>{ currencyFormatter.format(parseFloat(option.strike)) }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Notional</Col>\n          <Col className=\"text-right\"><b>{ currencyFormatter.format(notional) }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Moneyness</Col>\n          <Col className=\"text-right\"><b>{ option._moneyness }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Timestamp</Col>\n          <Col className=\"text-right\"><b>{ formatTimestamp(option.timestamp) }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Expiration</Col>\n          <Col className=\"text-right\"><b>{ formatTimestamp(option.expiration) }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Duration</Col>\n          <Col className=\"text-right\"><b>{ option._periodInDays }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Days until Expiration</Col>\n          <Col className=\"text-right\"><b>{ option._remainingDays?.toFixed(2) }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Premium</Col>\n          <Col className=\"text-right\"><b>{ option.premium }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Settlement Fee</Col>\n          <Col className=\"text-right\"><b>{ option.settlementFee }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Total Fee</Col>\n          <Col className=\"text-right\"><b>{ option.totalFee }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Account</Col>\n          <Col className=\"text-right\">\n            <a href={ accountUrl } target=\"_BLANK\"  rel=\"noreferrer\" className=\"link\">\n              <b>{ option.account }</b>\n            </a>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>Block</Col>\n          <Col className=\"text-right\">\n            <a href={ blockUrl } target=\"_BLANK\" rel=\"noreferrer\">\n              <b>{ option.block }</b>\n            </a>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>Locked Amount</Col>\n          <Col className=\"text-right\"><b>{ option.lockedAmount }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Implied Volatility</Col>\n          <Col className=\"text-right\"><b>{ option.impliedVolatility }</b></Col>\n        </Row>\n\n        <Row>\n          <Col>Status</Col>\n          <Col className=\"text-right\"><b>{ option.status }</b></Col>\n        </Row>\n\n      </ModalBody>\n\n      <ModalFooter\n        className=\"modal-section\"\n      >\n        <Button\n          outline\n          size=\"sm\"\n          color=\"secondary\"\n          onClick={ () => toggleModal() }\n        >\n          Close\n        </Button>\n      </ModalFooter>\n\n    </Modal>\n  )\n\n}\n\nexport default DetailsModal\n","import {\n  Nav,\n  Navbar as ReactstrapNavbar,\n  NavItem,\n  NavLink,\n} from 'reactstrap'\n\nimport './Navbar.css'\n\ninterface INavbarProps {\n  toggleStatsModal: any\n  toggleAboutModal: any\n}\n\nconst Navbar = ({ toggleStatsModal, toggleAboutModal }: INavbarProps) => (\n  <ReactstrapNavbar\n    className=\"app-navbar\"\n  >\n    <span className=\"app-brand\">Hegimon</span>\n    <Nav>\n      <NavItem>\n        <NavLink\n          className=\"app-nav-link\"\n          onClick={ () => toggleStatsModal() }\n        >\n          Total Stats\n        </NavLink>\n      </NavItem>\n      <NavItem className=\"spacer\">\n        <NavLink\n          className=\"app-nav-link\"\n          onClick={ () => toggleAboutModal() }\n        >\n          ?\n        </NavLink>\n      </NavItem>\n    </Nav>\n  </ReactstrapNavbar>\n)\n\nexport default Navbar\n","import {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table,\n} from 'reactstrap'\n\nimport './StatsModal.css'\n\nimport { IOption } from '../../interfaces/IOption'\nimport { IStats } from '../../interfaces/IStats'\n\nimport { computeStats } from '../../utils/Data'\n\ninterface IStatsModalProps {\n  ethData: IOption[]\n  wbtcData: IOption[]\n  isOpen: boolean\n  toggleModal: any\n}\n\nconst StatsModal = ({ ethData, wbtcData, isOpen, toggleModal }: IStatsModalProps) => {\n\n  const ethStats: IStats = computeStats(ethData)\n  const wbtcStats: IStats = computeStats(wbtcData)\n  const totalStats: IStats = computeStats([...ethData, ...wbtcData])\n\n  return (\n    <Modal\n      size=\"lg\"\n      fade={ false }\n      isOpen={ isOpen }\n      toggle={ toggleModal }\n    >\n\n      <ModalHeader\n        className=\"modal-section\"\n      >\n        Total Stats\n      </ModalHeader>\n\n      <ModalBody\n        className=\"modal-section\"\n      >\n\n        <Table borderless>\n          <thead>\n            <tr>\n              <th className=\"table-text\"></th>\n              <th className=\"table-text text-right\">ETH</th>\n              <th className=\"table-text text-right\">WBTC</th>\n              <th className=\"table-text text-right\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"table-text\">Active Contracts</td>\n              <td className=\"table-text text-right\">{ ethStats.total }</td>\n              <td className=\"table-text text-right\">{ wbtcStats.total }</td>\n              <td className=\"table-text text-right\">{ totalStats.total }</td>\n            </tr>\n            <tr>\n              <td className=\"table-text\">Puts</td>\n              <td className=\"table-text text-right\">{ ethStats.puts }</td>\n              <td className=\"table-text text-right\">{ wbtcStats.puts }</td>\n              <td className=\"table-text text-right\">{ totalStats.puts }</td>\n            </tr>\n            <tr>\n              <td className=\"table-text\">Calls</td>\n              <td className=\"table-text text-right\">{ ethStats.calls }</td>\n              <td className=\"table-text text-right\">{ wbtcStats.calls }</td>\n              <td className=\"table-text text-right\">{ totalStats.calls }</td>\n            </tr>\n            <tr>\n              <td className=\"table-text\">Put/Call Ratio</td>\n              <td className=\"table-text text-right\">{ ethStats.pcRatio }</td>\n              <td className=\"table-text text-right\">{ wbtcStats.pcRatio }</td>\n              <td className=\"table-text text-right\">{ totalStats.pcRatio }</td>\n            </tr>\n            <tr>\n              <td className=\"table-text\">ITM / OTM</td>\n              <td className=\"table-text text-right\">{ ethStats.itm } / { ethStats.otm }</td>\n              <td className=\"table-text text-right\">{ wbtcStats.itm } / { wbtcStats.otm }</td>\n              <td className=\"table-text text-right\">{ totalStats.itm } / { totalStats.otm }</td>\n            </tr>\n            <tr>\n              <td className=\"table-text\">Total Notional</td>\n              <td className=\"table-text text-right\">{ ethStats.notional }</td>\n              <td className=\"table-text text-right\">{ wbtcStats.notional }</td>\n              <td className=\"table-text text-right\">{ totalStats.notional }</td>\n            </tr>\n          </tbody>\n        </Table>\n\n      </ModalBody>\n\n      <ModalFooter\n        className=\"modal-section\"\n      >\n        <Button\n          outline\n          size=\"sm\"\n          color=\"secondary\"\n          onClick={ () => toggleModal() }\n        >\n          Close\n        </Button>\n      </ModalFooter>\n\n    </Modal>\n  )\n\n}\n\nexport default StatsModal\n","import React, { useEffect, useState } from 'react'\nimport { Col, Container, Row, Spinner } from 'reactstrap'\n\nimport './App.css'\n\nimport { IOption } from './interfaces/IOption'\nimport { IPriceResponse } from './interfaces/IPriceResponse'\n\nimport { findOption, getOptionsData, getPriceData, processData } from './utils/Data'\n\nimport AboutModal from './components/AboutModal/AboutModal'\nimport AssetModule from './components/AssetModule/AssetModule'\nimport DetailsModal from './components/DetailsModal/DetailsModal'\nimport Navbar from './components/Navbar/Navbar'\nimport StatsModal from './components/StatsModal/StatsModal'\n\nconst App: React.FC = () => {\n\n  const [ethData, setEthData] = useState<IOption[]>([])\n  const [wbtcData, setWbtcData] = useState<IOption[]>([])\n  const [activeId, setActiveId] = useState<string | null>(null)\n  const [priceData, setPriceData] = useState<IPriceResponse | null>(null)\n  const [detailsModalIsOpen, setDetailsModalIsOpen] = useState<boolean>(false)\n  const [modalOption, setModalOption] = useState<IOption | null | undefined>(null)\n  const [statsModalIsOpen, setStatsModalIsOpen] = useState<boolean>(false)\n  const [aboutModalIsOpen, setAboutModalIsOpen] = useState<boolean>(false)\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [hasError, setHasError] = useState<boolean>(false)\n\n  const openDetailsModal = (option: IOption | undefined) => {\n    setModalOption(option)\n    setDetailsModalIsOpen(true)\n  }\n\n  const closeDetailsModal = () => {\n    setModalOption(null)\n    setDetailsModalIsOpen(false)\n  }\n\n  const toggleStatsModal = () => setStatsModalIsOpen(!statsModalIsOpen)\n  const toggleAboutModal = () => setAboutModalIsOpen(!aboutModalIsOpen)\n\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const data = await getOptionsData()\n        const _priceData = await getPriceData()\n        const processedData = processData(data, _priceData)\n        setEthData(processedData.filter((o) => o.symbol === 'ETH'))\n        setWbtcData(processedData.filter((o) => o.symbol === 'WBTC'))\n        setPriceData(_priceData)\n        setIsLoading(false)\n      } catch (err) {\n        console.log(err)\n        setIsLoading(false)\n        setHasError(true)\n      }\n    }\n    loadData()\n  }, [])\n\n  useEffect(() => {\n    if (Boolean(activeId)) {\n      const option = findOption(activeId as string, ethData, wbtcData)\n      openDetailsModal(option)\n    } else {\n      closeDetailsModal()\n    }\n  }, [activeId, ethData, wbtcData])\n\n  return (\n    <div>\n\n      <Navbar\n        toggleStatsModal={ toggleStatsModal }\n        toggleAboutModal={ toggleAboutModal }\n      />\n\n      <Container fluid>\n\n        { isLoading && (\n          <div className=\"d-flex justify-content-center align-self-center spinner-spacing\">\n            <Spinner color=\"primary\" />\n          </div>\n        ) }\n\n        { !isLoading && hasError && (\n          <h4 className=\"text-center spinner-spacing\">Error loading data. Please try again.</h4>\n        ) }\n\n        { !isLoading && !hasError && (\n\n          <Row className=\"top-row\">\n\n          <Col>\n            <AssetModule\n              asset=\"ETH\"\n              data={ ethData }\n              setActiveId={ setActiveId }\n              currentPrice={ priceData?.ethereum.usd }\n            />\n          </Col>\n\n          <Col>\n            <AssetModule\n              asset=\"WBTC\"\n              data={ wbtcData }\n              setActiveId={ setActiveId }\n              currentPrice={ priceData?.['wrapped-bitcoin'].usd }\n            />\n          </Col>\n\n          </Row>\n\n        ) }\n\n      </Container>\n\n      <DetailsModal\n        option={ modalOption }\n        isOpen={ detailsModalIsOpen }\n        toggleModal={ closeDetailsModal }\n      />\n\n      <StatsModal\n        ethData={ ethData }\n        wbtcData={ wbtcData }\n        isOpen={ statsModalIsOpen }\n        toggleModal={ toggleStatsModal }\n      />\n\n      <AboutModal\n        isOpen={ aboutModalIsOpen }\n        toggleModal={ toggleAboutModal }\n      />\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './App'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}